<!doctype html>
<html lang="<%= locale %>">
<head>
    <meta charset="utf-8">
<!-- Google Tag Manager -->
<script>
(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id=' + i + dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-TF7HSC3N');
</script>
<script src="/js/bootstrap.bundle.min.js"></script>
<!-- Fin Google Tag Manager -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="theme-color" content="#C4B990">
    <title>UAP Immo | <%= i18n.my_profile %></title>
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/bootstrap-icons.css" rel="stylesheet">
    <link rel="preload" href="/css/styles-main.css" as="style">
    <link rel="stylesheet" href="/css/styles-main.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
    <style>
        html, body {
            height: 100%;
        }
.lang-flag {
      width: 24px;
      height: 16px;
      background-size: contain;
      background-repeat: no-repeat;
      background-position: center;
      display: inline-block;
      flex-shrink: 0;
    }
    .lang-fr {
      background-image: url('https://flagcdn.com/fr.svg');
    }
    .lang-en {
      background-image: url('https://flagcdn.com/gb.svg');
    }
        body {
            display: flex;
            flex-direction: column;
            font-family: 'Arial', sans-serif;
            background-color: #f8f9fa;
            margin: 0;
        }
        h3 {
            color: #000;
            text-align: left;
        }
        .navbar {
            background-color: #C4B990;
            margin-bottom: 20px;
        }
        .navbar .navbar-brand, .navbar .nav-link, .navbar .navbar-icon {
            color: #000;
        }
        .navbar .navbar-icon {
            color: #000;
        }
        .main-section {
            flex: 1;
            padding: 20px;
            background-color: #fff;
            margin-left: 10px;
            min-height: 500px;
        }
        .main-section .card {
            border: none;
            box-shadow: none;
        }
button.disabled {
  pointer-events: none;
  opacity: 0.7;
  cursor: not-allowed;
}
#statsDetails {
  overflow: hidden;
  max-height: 0;
  opacity: 0;
  transition: max-height 0.5s ease, opacity 0.4s ease;
}

#statsDetails.show {
  max-height: 1000px; /* suffisamment grand pour ton contenu */
  opacity: 1;
}

.progress {
    background-color: #d7d7d7 !important; 
    width: 7.6rem;
}
.form-section {
  margin-top: 30px;
  padding-top: 20px;
  border-top: 1px solid #dee2e6;
}
.tooltip-inner {
  background-color: #000 !important; /* fond noir */
  color: #fff !important;            /* texte blanc */
  font-size: 13px;
  border-radius: 4px;
  padding: 6px 10px;
  box-shadow: none !important;
 max-width: 220px !important;  /* Augmente si nécessaire */
  white-space: normal !important;
  word-wrap: break-word !important;
  overflow-wrap: break-word !important;
  text-align: left !important;
}
.tooltip-arrow::before {
  border-top-color: #000 !important; /* flèche noire */
}

.form-section:first-of-type {
  border-top: none;
  margin-top: 0;
  padding-top: 0;
}

.form-section h6 {
  font-weight: bold;
  font-size: 1.2rem;
  color: #444;
  margin-bottom: 20px;
  display: flex;
  align-items: center;
  gap: 10px;
}

.form-section h6 i {
  color: #8f97c4;
  font-size: 20px;
}

.form-text {
  font-size: 0.875rem;
  color: #6c757d;
}
.text-black {
  color: #000 !important;
}

   .sidebar {
            background-color: #8f97c4;
            border-radius: 60px;
            box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.8);
            padding: 20px;
            width: 60px;
            height: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            position: sticky;
            top: 20px;
        
        }
        .sidebar a {
            margin: 10px 0;
            color: #000;
            font-size: 24px;
            text-decoration: none;
        }
        .sidebar a:hover {
            color: #000;
        }
.tooltip-container {
  position: relative;
  display: inline-block;
  cursor: help;
}

.tooltip-text {
  visibility: hidden;
  width: 180px;
  background-color: rgba(0, 0, 0, 0.8);
  color: #fff;
  text-align: center;
  padding: 6px;
  border-radius: 5px;
  position: absolute;
  z-index: 10;
  bottom: 120%;
  left: 50%;
  transform: translateX(-50%);
  opacity: 0;
  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
  font-size: 13px;
  line-height: 1.4;
}
.tooltip.show {
  outline: none !important;
  box-shadow: none !important;
}
.has-tooltip:focus,
[data-bs-toggle="tooltip"]:focus {
  outline: none !important;
  box-shadow: none !important;
}

.tooltip-text::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  border-width: 5px;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.8) transparent transparent transparent;
}

.tooltip-container:hover .tooltip-text {
  visibility: visible;
  opacity: 1;
  transform: translateX(-50%) translateY(-5px);
}

#detailsModal .modal-body {
  font-family: 'Segoe UI', 'Helvetica Neue', Arial, sans-serif;
  color: #333; /* Finement foncé */
  font-size: 15px;
  line-height: 1.6;
}

#detailsModal .modal-body p {
  font-family: 'Segoe UI', 'Helvetica Neue', Arial, sans-serif;
  color: #212529; /* même que le titre Bootstrap */
  font-size: 1rem;
  line-height: 1.6;
  border-bottom: 1px solid #dee2e6;
  padding-bottom: 6px;
  margin-bottom: 12px;
}

#detailsModal .modal-body strong {
  color: #000;
  font-weight: 600;
}


        .footer {
            background-color: #343a40;
            color: #fff;
            padding: 20px 0;
        }
        .btn-custom {
            background-color: #8f97c4;
            color: #000;
            border: none;
        }
        .btn-custom:hover {
            background-color: #8f97c4;
            color: #000;
        }
        .btn-custom i {
            font-size: 24px;
        }
        .tooltip {
            position: absolute;
            color: #000;
            padding: 5px 10px;
            border-radius: 4px;
            white-space: nowrap;
            z-index: 1000;
            top: -30px;
            left: 50%;
            transform: translateX(-50%);
        }
        .copy-message {
            display: none;
            background-color: #d1e7dd;
            color: #0f5132;
            padding: 10px;
            border-radius: 5px;
            position: fixed;
            top: 10px;
            right: 10px;
            z-index: 1000;
        }
        .action-icons i {
            font-size: 24px;
            cursor: pointer;
            margin-right: 10px;
            color: #333;
        }
        .short-column {
            width: 10%;
        }
        .card-title {
            font-weight: 400;
            font-size: 1.6rem;
            color: #000;
            margin-bottom: 0.5rem;
        }
        .card-text {
            font-size: 1.1rem;
            line-height: 1.8rem;
            color: #666;
            margin-bottom: 1rem;
            letter-spacing: 0.5px;
        }
        .card-body .user-info {
            color: #333;
            margin-bottom: 0.2rem;
            line-height: 1.6rem;
        }
.hidden {
    display: none;
}


/* Couleurs dynamiques selon les jours restants */
.progress-bar.green { background-color: #8BC34A !important; }  /* ✅ Vert */
.progress-bar.orange { background-color: #FFC107 !important; } /* ✅ Orange */
.progress-bar.red { background-color: #FF5722 !important; }    /* ✅ Rouge */


input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}
input[type="number"] {
    -moz-appearance: textfield;
}
.form-group {
    margin-bottom: 15px;
}

.form-group label {
    color: #333;
    display: block;
    margin-bottom: 5px;
}

.form-control {
    width: 50%;
    padding: 10px;
    font-size: 16px;
    border: 1px solid #8f97c4;
    border-radius: 5px;
    transition: border 0.3s ease-in-out;
}


/* Effet focus */
.form-control:focus {
    border-color: #8f97c4; /* Bleu */
    outline: none;
    box-shadow: 0 0 5px rgba(143, 151, 196, 0.5);
}

  .navbar .btn-outline-dark {
    margin-right: 12px;
  }
/* Réduction et centrage des champs de formulaire */
#add-property-form .form-group {
  max-width: 500px;
  margin-bottom: 20px;
}


/* Appliquer la même largeur aux inputs et textarea */
#add-property-form .form-control {
  width: 100%;
}
#add-property-form {
  padding-left: 20px;
}

/* Centrer le bouton de soumission et le rendre plus petit */
#add-property-form button[type="submit"] {
  width: 100%; /* Même largeur que les champs */
  max-width: 500px; /* Aligné sur la largeur max des .form-group */
  margin: 30px 0 0 0; /* Supprime le centrage automatique */
  padding: 10px;
  display: block;
}


/* Barre de progression des images (même largeur que input) */
#add-property-form progress {
  display: block;
  width: 100%;
  height: 6px;
  margin-top: 8px;
}


        @media (max-width: 767px) {
            .container-fluid {
                padding-left: 0;
                padding-right: 0;
            }
            .container {
                padding-left: 15px;
                padding-right: 15px;
            }
            .row {
                flex-direction: column;
                align-items: center;
            }
  #add-property-form .form-group {
    max-width: 100%;
    padding: 0 10px;
  }

  #add-property-form button[type="submit"] {
    width: 100%;
  }
            .main-section {
                margin-left: 0;
                margin-right: 0;
                margin-top: 0;
                width: 100%;
                border-radius: 0;
                box-shadow: none;
                min-height: 300px;
                overflow-x: auto;
                padding-left: 0;
                padding-right: 0;
            }
            .sidebar {
                display: none;
            }
            .sidebar-mobile-links {
                display: block !important;
                margin-top: 10px;
            }
            .mobile-margin {
                margin-top: 30px;
            }
            table {
                width: 100%;
                table-layout: auto;
            }
            th, td {
                white-space: nowrap;
                padding: 8px;
                text-align: left;
            }
            .table-responsive {
                display: block;
                width: 100%;
                overflow-x: auto;
                -webkit-overflow-scrolling: touch;
            }
            #landing .form-group {
                width: 100%;
                padding: 5px;
            }
            #landing .form-control {
                width: 100%;
                padding: 10px;
                font-size: 16px;
            }
            #landing button.btn-custom {
                width: 100%;
                padding: 10px;
                font-size: 18px;
            }
            .card-title {
                font-weight: 400;
                font-size: 1.4rem;
                color: #000;
                margin-bottom: 0.5rem;
            }
            .card-text {
                font-size: 1.1rem;
                line-height: 1.8rem;
                color: #666;
                margin-bottom: 1rem;
                letter-spacing: 0.5px;
            }
            .card-body .user-info {
                color: #333;
                margin-bottom: 0.2rem;
                line-height: 1.2rem;
            }
.hidden {
    display: none;
}


progress {
    width: 100%;
    height: 10px;
    margin-top: 5px;
background-color: #d9d9d9 !important;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}
input[type="number"] {
    -moz-appearance: textfield;
}

        }
        @media (min-width: 768px) {
            .sidebar-links {
                display: none;
            }
            .card-title {
                font-size: 1.475rem;
                font-weight: 400;
                color: #000;
            }
            .card-text {
                font-size: 1rem;
                line-height: 1.6rem;
                letter-spacing: 0.4px;
            }
.hidden {
    display: none;
}

progress {
    width: 100%;
    height: 10px;
    margin-top: 5px;
}
        }
@media (max-width: 991.98px) {
      .mobile-lang-selector {
        display: flex !important;
        align-items: center;
        gap: 8px;
      }
      .desktop-lang-selector {
        display: none !important;
      }
    }
    @media (min-width: 992px) {
      .mobile-lang-selector {
        display: none !important;
      }
    }

    </style>
</head>
<body id="top">

<noscript>
  <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TF7HSC3N"
  height="0" width="0" style="display:none;visibility:hidden"></iframe>
</noscript>
    <main>
      <body id="top">
    <main>
<% let cleanPath = currentPath.replace(/^\/(fr|en)/, '') || '/'; %>
     <nav class="navbar navbar-expand-lg fixed-top">
  <div class="container">
    <a class="navbar-brand" href="/">
      <span>UAP Immo</span>
    </a>

    <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
      data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false"
      aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarNav">
      <!-- MENU PRINCIPAL -->
      <ul class="navbar-nav ms-lg-5 me-lg-auto">
        <li class="nav-item">
          <a class="nav-link click-scroll" href="/"><%= i18n.menu.home %></a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/<%= locale %>/contact"><%= i18n.menu.contact %></a>
        </li>

        <!-- Liens supplémentaires visibles uniquement en mobile -->
        <li class="nav-item sidebar-mobile-links sidebar-links">
          <a class="nav-link click-scroll" href="#" onclick="showSection('account')"><i class="fa fa-user"></i> <%= i18n.my_profile %></a>
        </li>
        <li class="nav-item sidebar-mobile-links sidebar-links">
          <a class="nav-link click-scroll" href="#" onclick="showSection('landing')"><i class="fa fa-pencil-alt"></i> <%= i18n.add_property %></a>
        </li>
        <li class="nav-item sidebar-mobile-links sidebar-links">
          <a class="nav-link click-scroll" href="#" onclick="showSection('donnees')"><i class="fa-solid fa-chart-line"></i> <%= i18n.stats %></a>
        </li>
        <li class="nav-item sidebar-mobile-links sidebar-links">
          <a class="nav-link click-scroll" href="#" onclick="showSection('created-pages')"><i class="fa fa-file-alt"></i> <%= i18n.created_pages %></a>
        </li>
        <li class="nav-item sidebar-mobile-links sidebar-links">
          <a class="nav-link click-scroll" href="#" onclick="showSection('orders')"><i class="fa fa-shopping-cart"></i> <%= i18n.my_orders %></a>
        </li>

        <!-- Connexion / Compte - version MOBILE -->
        <% if (isAuthenticated) { %>
          <li class="nav-item d-lg-none">
            <a class="nav-link d-flex align-items-center gap-2" href="/<%= locale %>/user">
              <i class="bi bi-person-circle"></i>
              <%= locale === 'fr' ? 'Mon compte' : 'My Account' %>
            </a>
          </li>
          <li class="nav-item d-lg-none">
            <form action="/logout" method="POST" class="w-100">
              <button type="submit" class="nav-link btn btn-link text-start d-flex align-items-center gap-2 w-100" style="border: none; background: none;">
                <i class="bi bi-box-arrow-right"></i>
                <%= locale === 'fr' ? 'Déconnexion' : 'Logout' %>
              </button>
            </form>
          </li>
        <% } else { %>
          <li class="nav-item d-lg-none">
            <a class="nav-link d-flex align-items-center gap-2" href="/<%= locale %>/login">
              <i class="bi bi-person-fill"></i>
              <%= locale === 'fr' ? 'Connexion' : 'Login' %>
            </a>
          </li>
        <% } %>
      </ul>

      <!-- Connexion / Compte - version DESKTOP -->
      <% if (isAuthenticated) { %>
        <div class="d-none d-lg-flex align-items-center ms-auto">
          <a href="/<%= locale %>/user" class="btn btn-outline-dark rounded-pill px-3 py-1 me-2 d-flex align-items-center gap-2">
            <i class="bi bi-person-circle"></i>
            <span><%= locale === 'fr' ? 'Mon compte' : 'My Account' %></span>
          </a>
          <form action="/logout" method="POST" class="d-inline">
            <button type="submit" class="btn btn-outline-dark rounded-pill px-3 py-1 d-flex align-items-center gap-2">
              <i class="bi bi-box-arrow-right"></i>
              <span><%= locale === 'fr' ? 'Déconnexion' : 'Logout' %></span>
            </button>
          </form>
        </div>
      <% } else { %>
        <div class="d-none d-lg-flex align-items-center ms-auto">
          <a href="/<%= locale %>/login" class="btn btn-outline-dark rounded-pill px-3 py-1 me-3 d-flex align-items-center gap-2">
            <i class="bi bi-person-fill"></i>
            <span><%= locale === 'fr' ? 'Connexion' : 'Login' %></span>
          </a>
        </div>
      <% } %>

      <!-- Sélecteur de langue - uniquement desktop -->
      <div class="desktop-lang-selector ms-3">
        <div class="dropdown">
          <button class="btn btn-light border rounded-pill px-3 py-1 d-flex align-items-center gap-2" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            <span class="lang-flag <%= locale === 'fr' ? 'lang-fr' : 'lang-en' %>"></span>
            <i class="bi bi-chevron-down small"></i>
          </button>
          <ul class="dropdown-menu dropdown-menu-end shadow">
            <% if (locale === 'fr') { %>
              <li><a class="dropdown-item d-flex align-items-center gap-2" href="/en<%= cleanPath %>"><span class="lang-flag lang-en"></span> <span>English</span></a></li>
            <% } else { %>
              <li><a class="dropdown-item d-flex align-items-center gap-2" href="/fr<%= cleanPath %>"><span class="lang-flag lang-fr"></span> <span>Français</span></a></li>
            <% } %>
          </ul>
        </div>
      </div>
    </div>
  </div>
</nav>


<section class="contact-section section-padding section-bg" id="section_5">
    <div class="container">
        <h5 class="text-black mobile-margin">
            <% if (user) { %>
                <%= i18n.welcome_user.replace('{lastName}', user.lastName).replace('{firstName}', user.firstName) %>
            <% } else { %>
                <%= i18n.welcome_guest %>
            <% } %>
        </h5>
        <div class="container-fluid">
            <div class="row mt-4">
                <div class="col-auto p-0">
                   <div class="sidebar">
  <a href="#" onclick="showSection('account')"><i class="fa fa-user"></i></a>
  <a href="#" onclick="showSection('landing')"><i class="fa fa-pencil-alt"></i></a>
  <a href="#" onclick="showSection('donnees')"><i class="fa-solid fa-chart-line"></i></a>
  <a href="#" onclick="showSection('created-pages')"><i class="fa fa-file-alt"></i></a>
  <a href="#" onclick="showSection('orders')"><i class="fa fa-shopping-cart"></i></a>
</div>

                </div>
          <div class="col">
  <div class="main-section">
  <!-- SECTION ACCOUNT -->
<!-- SECTION ACCOUNT -->
<div id="account" class="card">
  <div class="card-body">
    <h5 class="card-title"><%= i18n.my_profile %></h5>
    <p class="card-text"><%= i18n.profile_info %></p>

    <!-- ✅ Bouton Fonctionnement directement sous l'intro -->
    <button id="toggleHelpProfile" class="btn btn-outline-dark btn-sm mb-3 d-flex align-items-center gap-2" type="button">
      <i class="bi bi-info-circle"></i>
      <span><%= i18n.menu.fonctionnement %></span>
    </button>

    <div id="helpProfileDetails" class="collapse mt-2">
      <p class="card-text"><%= i18n.help_profile_line1 %></p>
      <p class="card-text"><%= i18n.help_profile_line2 %></p>
      <p class="card-text"><%= i18n.help_profile_line3 %></p>
    </div>

    <!-- Infos utilisateur -->
    <p class="card-text user-info"><strong><%= i18n.name %> :</strong> <%= user.lastName %></p>
    <p class="card-text user-info"><strong><%= i18n.first_name %> :</strong> <%= user.firstName %></p>
    <p class="card-text user-info"><strong><%= i18n.email %> :</strong> <%= user.email %></p>

    <p class="card-text user-info d-flex align-items-center">
      <strong><%= i18n.two_factor_auth %></strong>
      <% if (!user.twoFactorEnabled) { %>
        <a href="/<%= locale %>/enable-2fa" class="btn btn-sm btn-warning ms-2"><%= i18n.enable_2fa %></a>
      <% } else { %>
        <span class="badge bg-success ms-2"><%= i18n.two_factor_enabled %></span>
      <% } %>
    </p>

    <p class="card-text user-info d-flex align-items-center">
      <strong><%= i18n.password_label %></strong>
      <button type="button" class="btn btn-sm btn-outline-dark ms-2" onclick="showSection('reset-password')"><%= i18n.edit %></button>
    </p>

    <hr class="my-4">

    <!-- Vos Annonces -->
    <p class="card-text"><strong><%= i18n.your_ads %></strong></p>
    <% if (userLandingPages && userLandingPages.length > 0) { %>
      <p class="card-text"><%= i18n.ads_generated.replace('{count}', userLandingPages.length) %></p>
      <p class="card-text"><%= i18n.remember_to_publish %></p>
    <% } else { %>
      <p class="card-text"><%= i18n.no_ads_yet %></p>
      <a href="#" onclick="showSection('landing')" class="btn btn-sm btn-outline-dark mt-2">
        <i class="bi bi-plus-circle"></i><%= i18n.create_first_ad %>
      </a>
    <% } %>
  </div>
</div>

<!-- ✅ FORMULAIRE AMÉLIORÉ UX - SECTION LANDING -->
<div id="landing" class="card" style="display: none;">
  <div class="card-body">
    <h5 class="card-title"><%= i18n.add_property %></h5>
    <p class="card-text"><%= i18n.property_details %></p>

    <div class="progress mb-4">
      <div class="progress-bar" role="progressbar" id="formProgress" style="width: 25%;">Étape 1 sur 4</div>
    </div>

    <div id="success-message-container"></div>

    <form id="add-property-form" action="/add-property" method="POST" enctype="multipart/form-data">
      <input type="hidden" id="userId" name="userId" value="<%= user._id %>">

      <!-- Étape 1 -->
      <div class="form-step" data-step="1">
        <h6 class="mb-3"><%= i18n.step1_title %></h6>
        <div class="form-group">
          <label for="rooms"><%= i18n.rooms %>
            <i class="fa fa-question-circle ms-1 text-muted" data-bs-toggle="tooltip" title="Inclut chambres, salon, cuisine, etc."></i>
          </label>
          <input type="number" class="form-control" id="rooms" name="rooms" required>
          <small class="form-text text-muted">Inclut les chambres, salons, etc.</small>
        </div>

        <div class="form-group">
          <label for="bedrooms"><%= i18n.bedrooms %>
            <i class="fa fa-question-circle ms-1 text-muted" data-bs-toggle="tooltip" title="Nombre de chambres à coucher"></i>
          </label>
          <input type="number" class="form-control" id="bedrooms" name="bedrooms" required>
          <small class="form-text text-muted">Indiquez uniquement les chambres à coucher.</small>
        </div>

        <div class="form-group">
          <label for="surface"><%= i18n.surface %> <span style="color:red">*</span>
            <i class="fa fa-question-circle ms-1 text-muted" data-bs-toggle="tooltip" title="Surface habitable en m²"></i>
          </label>
          <input type="number" class="form-control" id="surface" name="surface" required>
          <small class="form-text text-muted">Exemple : 120</small>
        </div>

        <div class="form-group">
          <label for="price"><%= i18n.price %> <span style="color:red">*</span>
            <i class="fa fa-question-circle ms-1 text-muted" data-bs-toggle="tooltip" title="Prix affiché sur l’annonce"></i>
          </label>
          <input type="number" class="form-control" id="price" name="price" required>
          <small class="form-text text-muted">Exemple : 750000</small>
        </div>

        <div class="form-group">
          <label for="country"><%= i18n.country %> <span style="color:red">*</span>
            <i class="fa fa-question-circle ms-1 text-muted" data-bs-toggle="tooltip" title="Pays où se situe le bien"></i>
          </label>
          <input type="text" class="form-control" id="country" name="country" required>
        </div>

        <div class="form-group">
          <label for="postalCode"><%= i18n.postal_code %>
            <i class="fa fa-question-circle ms-1 text-muted" data-bs-toggle="tooltip" title="Code postal à 5 chiffres"></i>
          </label>
          <input type="text" name="postalCode" id="postalCode" class="form-control" required>
        </div>

        <div class="form-group">
          <label for="city"><%= i18n.city %> <span style="color: red;">*</span>
            <i class="fa fa-question-circle ms-1 text-muted" data-bs-toggle="tooltip" title="Ville ou commune du bien"></i>
          </label>
          <input type="text" class="form-control" id="city" name="city" required>
        </div>

        <div class="form-group">
          <label for="yearBuilt"><%= i18n.year_built %>
            <i class="fa fa-question-circle ms-1 text-muted" data-bs-toggle="tooltip" title="Année de construction du bien"></i>
          </label>
          <input type="number" class="form-control" id="yearBuilt" name="yearBuilt">
          <small class="form-text text-muted">Exemple : 1995</small>
        </div>

        <div class="form-group">
          <label for="propertyType"><%= i18n.property_type %> <span style="color:red">*</span>
            <i class="fa fa-question-circle ms-1 text-muted" data-bs-toggle="tooltip" title="Type de bien (villa, maison, appartement...)"></i>
          </label>
          <select class="form-control" id="propertyType" name="propertyType" required>
            <option value="">-- Choisir --</option>
            <option value="Propriété">Propriété</option>
            <option value="Villa">Villa</option>
            <option value="Hôtel particulier">Hôtel particulier</option>
            <option value="Appartement">Appartement</option>
            <option value="Chateau">Château</option>
            <option value="Maison">Maison</option>
          </select>
        </div>

        <button type="button" class="btn btn-primary next-step mt-3"><%= i18n.next %></button>
      </div>

      <!-- Étape 2 -->
       <div class="form-step d-none" data-step="2">
        <h6 class="mb-3"><%= i18n.equipment %></h6>
        <% const equipmentOptions = [
          { id: 'pool', label: 'Piscine' },
          { id: 'doubleGlazing', label: 'Double vitrage' },
          { id: 'wateringSystem', label: 'Arrosage automatique' },
          { id: 'barbecue', label: 'Barbecue' },
          { id: 'carShelter', label: 'Abri de voiture' },
          { id: 'parking', label: 'Parking' },
          { id: 'caretakerHouse', label: 'Maison de gardien' },
          { id: 'electricShutters', label: 'Stores électriques' },
          { id: 'outdoorLighting', label: 'Éclairage extérieur' }
        ]; %>

        <% equipmentOptions.forEach(e => { %>
          <div class="form-group">
            <label for="<%= e.id %>"><%= e.label %>
              <i class="fa fa-question-circle ms-1 text-muted" data-bs-toggle="tooltip" title="Présence ou non de cet équipement."></i>
            </label>
            <select class="form-control" id="<%= e.id %>" name="<%= e.id %>">
              <option value="false">Non</option>
              <option value="true">Oui</option>
            </select>
          </div>
        <% }); %>

        <button type="button" class="btn btn-secondary prev-step mt-3 me-2"><%= i18n.previous %></button>
        <button type="button" class="btn btn-primary next-step mt-3"><%= i18n.next %></button>
      </div>

      <!-- Étape 3 -->
       <div class="form-step d-none" data-step="3">
        <h6 class="mb-3"><%= i18n.photos_title %></h6>
        <div class="form-group">
          <label for="dpe"><%= i18n.dpe_label %> <span style="color:red">*</span>
            <i class="fa fa-question-circle ms-1 text-muted" data-bs-toggle="tooltip" title="Classe énergétique du bien (obligatoire)"></i>
          </label>
          <select class="form-control" id="dpe" name="dpe" required>
            <option value="">-- Sélectionner --</option>
            <option value="A">A - Excellent</option>
            <option value="B">B - Très bon</option>
            <option value="C">C - Bon</option>
            <option value="D">D - Moyenne</option>
            <option value="E">E - Passable</option>
            <option value="F">F - Mauvais</option>
            <option value="G">G - Très mauvais</option>
            <option value="En cours">En cours</option>
          </select>
        </div>

        <div class="form-group">
    <label for="photo1"><%= i18n.main_photo %> <span class="text-danger">*</span></label>
    <input type="file" class="form-control" id="photo1" name="photo1" accept="image/*" required onchange="handleFileUpload(this, 'progress1', 'status1')">
    <progress id="progress1" value="0" max="100" style="width: 100%; display: none;"></progress>
    <span id="status1" class="text-muted small d-block mt-1"></span>
  </div>

  <div class="form-group">
    <label for="photo2"><%= i18n.secondary_photo %> <span style="color:red">*</span></label>
    <input type="file" class="form-control" id="photo2" name="photo2" accept="image/*" required onchange="handleFileUpload(this, 'progress2', 'status2')">
    <progress id="progress2" value="0" max="100" style="width: 100%; display: none;"></progress>
    <span id="status2" class="text-muted small d-block mt-1"></span>
  </div>

        <button type="button" class="btn btn-secondary prev-step mt-3 me-2"><%= i18n.previous %></button>
        <button type="button" class="btn btn-primary next-step mt-3"><%= i18n.next %></button>
      </div>

      <!-- Étape 4 -->
     <div class="form-step d-none" data-step="4">
        <h6 class="mb-3"><%= i18n.description_title %></h6>
        <div class="form-group">
          <label for="description"><%= i18n.description_label %> <span style="color:red">*</span></label>
          <textarea class="form-control" id="description" name="description" rows="5" maxlength="820" required></textarea>
          <small id="charCount">0/820 <%= i18n.characters %></small>
        </div>
        <button type="button" class="btn btn-secondary prev-step mt-3 me-2"><%= i18n.previous %></button>
        <button type="submit" class="btn btn-dark py-2 mt-3">
          <i class="fa fa-check-circle me-2"></i><%= i18n.create_ad %>
        </button>
      </div>

      <div id="generatedLink" class="mt-3"></div>
    </form>

    <script>
      let currentStep = 1;

      function showStep(step) {
        document.querySelectorAll('.form-step').forEach(div => {
          div.classList.add('d-none');
          div.style.opacity = 0;
        });
        const stepEl = document.querySelector(`.form-step[data-step='${step}']`);
        stepEl.classList.remove('d-none');
        stepEl.style.opacity = 1;

        const progressBar = document.getElementById('formProgress');
        if (progressBar) {
          progressBar.style.width = `${step * 25}%`;
          progressBar.innerText = `Étape ${step} sur 4`;
        }
      }

      document.querySelectorAll('.next-step').forEach(btn => {
        btn.addEventListener('click', () => {
          const currentFields = document.querySelector(`.form-step[data-step='${currentStep}']`).querySelectorAll('input, select, textarea');
          for (let field of currentFields) {
            if (!field.checkValidity()) {
              field.reportValidity();
              return;
            }
          }
          currentStep++;
          showStep(currentStep);
        });
      });

      document.querySelectorAll('.prev-step').forEach(btn => {
        btn.addEventListener('click', () => {
          currentStep--;
          showStep(currentStep);
        });
      });

      document.querySelector('#add-property-form')?.addEventListener('submit', function (e) {
        const postalCode = document.getElementById('postalCode')?.value;
        const postalCodePattern = /^\d{5}$/;
        if (postalCode && !postalCodePattern.test(postalCode)) {
          e.preventDefault();
          alert('Le code postal doit contenir exactement 5 chiffres.');
        }
      });

      const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
      tooltipTriggerList.forEach(el => new bootstrap.Tooltip(el));

      showStep(currentStep);
    </script>
  </div>
</div>



                        <!-- Section Données -->
                     <div id="donnees" class="card" style="display: none;">
  <div class="card-body">
    <h5 class="card-title"><%= i18n.stats %></h5>
  <p class="card-text mb-3"><%= i18n.stats_info %></p>

<!-- Bouton toggle -->
  <button id="toggleDetailsBtn" class="btn btn-outline-dark btn-sm mb-3 d-flex align-items-center gap-2" type="button">
  <i class="bi bi-info-circle"></i>
  <span><%= i18n.show_column_details %></span>
  </button>

<!-- Section masquée -->
<div id="statsDetails" class="mb-3">
  <p class="card-text mb-1">Page : titre ou lien de l’annonce concernée.</p>
  <p class="card-text mb-1">Vues : nombre total de fois où la page a été affichée, toutes visites confondues.</p>
  <p class="card-text mb-1">Utilisateurs : nombre de visiteurs uniques (comptés une seule fois chacun).</p>
  <p class="card-text mb-1">Scrolls : nombre de fois où les visiteurs ont fait défiler la page (indicateur d’intérêt).</p>
  <p class="card-text mb-1">Source : origine de la visite (ex. : lien direct, moteur de recherche, réseaux sociaux).</p>
  <p class="card-text mb-1">Géolocalisation : localisation géographique estimée du visiteur (ville ou pays).</p>
  <p class="card-text mb-1">Appareil : type d’appareil utilisé pour consulter la page (ordinateur, mobile, tablette).</p>
  <p class="card-text mb-1">OS : système d’exploitation utilisé (Windows, macOS, Android, iOS, etc.).</p>
  <p class="card-text mb-1">Navigateur : logiciel de navigation utilisé (Chrome, Safari, Firefox, etc.).</p>
  <p class="card-text mb-1">Langue : langue du navigateur ou de l’appareil de l’utilisateur.</p>
</div>


    <form id="statsFilter" class="mb-3">
  <div class="row g-2 align-items-end">
    <div class="col-sm-6 col-md-3">
      <label for="startDate" class="form-label"><%= i18n.start_date %></label>
      <input type="date" id="startDate" name="startDate" class="form-control" required>
    </div>
    <div class="col-sm-6 col-md-3">
      <label for="endDate" class="form-label"><%= i18n.end_date %></label>
      <input type="date" id="endDate" name="endDate" class="form-control" required>
    </div>
    <div class="col-12 col-md-3">
      <button type="submit" class="btn btn-dark w-100 mt-3 mt-md-0"><%= i18n.filter_stats %></button>
    </div>
  </div>
</form>



   <div class="table-responsive">
      <table class="table table-striped">
 <thead class="table-dark">
  <tr>
    <th>
      <span data-bs-toggle="tooltip" title="Lien de l'annonce"><%= i18n.table_page %></span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Nombre total de vues"><%= i18n.table_views %></span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Nombre d'utilisateurs uniques"><%= i18n.table_users %></span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Nombre de scrolls détectés"><%= i18n.table_scrolls %></span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Source de trafic (ex : Google, Facebook…)"><%= i18n.table_source %></span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Pays, région et ville"><%= i18n.table_location %></span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Type d'appareil (mobile, desktop…)"><%= i18n.table_device %></span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Système d'exploitation"><%= i18n.table_os %></span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Navigateur utilisé"><%= i18n.table_browser %></span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Langue du navigateur"><%= i18n.table_language %></span>
    </th>
  </tr>
</thead>

 <tbody id="stats-table-body">
  <% if (stats && stats.length > 0) { %>
    <% stats.forEach(stat => { %>
      <tr>
        <td><%= stat.page %></td>
        <td><%= stat.views %></td>
        <td><%= stat.users %></td>
        <td><%= stat.scrolls %></td>
        <td><%= stat.geo.country %></td>
        <td><%= stat.device %></td>
        <td><%= stat.os %></td>
        <td><%= stat.browser %></td>
        <td><%= stat.language %></td>
        <td><%= stat.source %></td>
      </tr>
    <% }); %>
  <% } else { %>
    <tr><td colspan="10"><%= i18n.no_stats_available %></td></tr>
  <% } %>
</tbody>
</table>
    </div>
  </div>
</div>


<!-- ... tout le code HTML ci-dessus reste inchangé ... -->

<!-- Section Mes Commandes (design harmonisé) -->
<div id="orders" class="card" style="display: none;">
  <div class="card-body">
   <h5 class="card-title"><%= i18n.my_orders %></h5>
<p class="card-text"><%= i18n.orders_info %></p>


    <div class="table-responsive">
      <table class="table table-striped">
       <thead class="table-dark">
  <tr>
    <th>
      <span data-bs-toggle="tooltip" title="Numéro de votre commande">
        <%= i18n.orders_table_order %>
      </span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Date de votre commande">
        <%= i18n.orders_table_date %>
      </span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Statut de la commande (payée ou en attente)">
        <%= i18n.orders_table_status %>
      </span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Nombre de jours de diffusion restants (max 90 jours)">
        <%= i18n.orders_table_days_left %>
      </span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Fin de la diffusion publicitaire (90 jours après l'achat)">
        <%= i18n.orders_table_expiration %>
      </span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Copier l’URL, voir la page, télécharger la facture">
        <%= i18n.orders_table_actions %>
      </span>
    </th>
  </tr>
</thead>

        <tbody id="orders-list"></tbody>
      </table>
    </div>

    <div id="no-orders-message" style="display: none;" class="text-center">
      <p><%= i18n.no_orders_found %></p>
    </div>
  </div>
</div>

<!-- Spinner de chargement pour statistiques -->
<div id="stats-loading" class="text-center my-3" style="display: none;">
  <div class="spinner-border text-secondary" role="status">
    <span class="visually-hidden"><%= i18n.loading %></span>
  </div>
  <p class="mt-2"><%= i18n.loading_stats %></p>
</div>

<!-- SECTION CREATED PAGES -->
 <div id="created-pages" class="card" style="display: none;">
  <div class="card-body">
    <h5 class="card-title"><%= i18n.created_pages %></h5>
    <p class="card-text"><%= i18n.created_pages_info %></p>

    <div class="table-responsive">
      <table class="table table-striped">
        <thead class="table-dark">
  <tr>
    <th>
      <span data-bs-toggle="tooltip" title="Identifiant unique de la page créée">
        <%= i18n.created_id %>
      </span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Type de bien (maison, villa, château…)">
        <%= i18n.created_type %>
      </span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Pays dans lequel se situe le bien">
        <%= i18n.created_country %>
      </span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Ville dans laquelle se trouve le bien">
        <%= i18n.created_city %>
      </span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Prix affiché sur la page d’annonce">
        <%= i18n.created_price %>
      </span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Afficher les informations complètes de l'annonce">
        <%= i18n.created_details %>
      </span>
    </th>
    <th>
      <span data-bs-toggle="tooltip" title="Copier l’URL, diffuser ou modifier votre page">
        <%= i18n.created_actions %>
      </span>
    </th>
  </tr>
</thead>

        <tbody id="properties-list"></tbody>
      </table>
    </div>

    <div id="no-properties-message" class="text-center" style="display: none;">
      <p><%= i18n.no_properties_message %></p>
    </div>
  </div>
</div>


<!-- Toast de confirmation -->
<div id="toast-confirm" class="position-fixed bottom-0 end-0 p-3" style="z-index: 9999; display: none;">
  <div class="toast align-items-center text-white bg-success border-0 show" role="alert">
    <div class="d-flex">
      <div class="toast-body">
        🎉 <%= i18n.redirect_payment %>
      </div>
      <button type="button" class="btn-close btn-close-white me-2 m-auto" onclick="document.getElementById('toast-confirm').style.display='none';"></button>
    </div>
 
          </div>
 </div>
        </div> <!-- Fin de main-section -->
             
        </div>
 </div>
 </div>
    </div>
</section>
</main>
<footer class="site-footer section-padding">
  <div class="container">
    <div class="row">
      <div class="col-lg-3 col-12 mb-4 pb-2">
        <a class="navbar-brand mb-2" href="/<%= locale %>">
          <span>UAP Immo</span>
        </a>
      </div>
      <div class="col-lg-3 col-md-4 col-6">
        <h6 class="site-footer-title mb-3"><%= i18n.footer.information_title %></h6>
        <ul class="site-footer-links">
          <li class="site-footer-link-item"><a href="/<%= locale %>" class="site-footer-link"><%= i18n.menu.home %></a></li>
          <li class="site-footer-link-item"><a href="/<%= locale %>/register" class="site-footer-link"><%= i18n.footer.create_account %></a></li>
        </ul>
      </div>
      <div class="col-lg-3 col-md-4 col-6">
        <h6 class="site-footer-title mb-3"><%= i18n.footer.access_title %></h6>
        <ul class="site-footer-links">
          <li class="site-footer-link-item"><a href="/<%= locale %>/contact" class="site-footer-link"><%= i18n.menu.contact %></a></li>
        </ul>
      </div>
      <div class="col-lg-3 col-md-4 col-12 mt-4 mt-lg-0 ms-auto">
        <div class="dropdown">
          <button class="btn btn-light border rounded-pill px-3 py-1 d-flex align-items-center gap-2" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            <span class="lang-flag <%= locale === 'fr' ? 'lang-fr' : 'lang-en' %>"></span>
            <i class="bi bi-chevron-down small"></i>
          </button>
          <ul class="dropdown-menu dropdown-menu-end shadow">
            <% if (locale === 'fr') { %>
              <li><a class="dropdown-item d-flex align-items-center gap-2" href="/en<%= cleanPath %>"><span class="lang-flag lang-en"></span> <span>English</span></a></li>
            <% } else { %>
              <li><a class="dropdown-item d-flex align-items-center gap-2" href="/fr<%= cleanPath %>"><span class="lang-flag lang-fr"></span> <span>Français</span></a></li>
            <% } %>
          </ul>
        </div>
      </div>
    </div>
    <p class="copyright-text mt-lg-5 mt-4">Copyright © 2025 UAP Company. <%= i18n.footer && i18n.footer.all_rights ? i18n.footer.all_rights : 'Tous droits réservés.' %>
</p>
  </div>
</footer>
<div class="copy-message" id="copyMessage"><%= i18n.copy_success_message %></div>
<!-- JavaScript -->
<script src="/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-U1DAWAznBHeqEIlVSCgzq+c9gqGAJn5c/t99JyeKa9xxaYpSvHU5awsuZVVFIhvj" crossorigin="anonymous"></script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const navbarCollapse = document.getElementById('navbarNav');

    document.querySelectorAll('.navbar-nav .nav-link').forEach(function (link) {
      link.addEventListener('click', function () {
        if (navbarCollapse.classList.contains('show')) {
          // Ferme le menu (collapse Bootstrap 5)
          new bootstrap.Collapse(navbarCollapse).hide();
        }
      });
    });
  });
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    function setupToggleButton(btnId, targetId, showText, hideText) {
      const btn = document.getElementById(btnId);
      const target = document.getElementById(targetId);

      if (!btn || !target) return;

      btn.addEventListener("click", function () {
        const isVisible = target.classList.contains("show");
        target.classList.toggle("show");
        btn.querySelector("span").textContent = isVisible ? showText : hideText;
      });
    }

    // Bouton de la section Mon Profil
    setupToggleButton(
      "toggleHelpProfile",
      "helpProfileDetails",
      "<%= i18n.menu.fonctionnement %>",
      "<%= i18n.toggle_help_hide %>"
    );

    // ✅ Ajoute cet appel pour le bouton "Voir les détails des colonnes"
    setupToggleButton(
      "toggleDetailsBtn",
      "statsDetails",
      "<%= i18n.show_column_details %>",
      "<%= i18n.hide_details %>"
    );
  });
</script>

<script>
function showSection(sectionId) {
    const sections = ['account', 'landing', 'donnees', 'created-pages', 'reset-password'];
    sections.forEach(id => {
        const sectionElement = document.getElementById(id);
        if (sectionElement) {
            sectionElement.style.display = id === sectionId ? 'block' : 'none';
        }
    });

    if (sectionId === 'created-pages') {
        loadProperties();
    }

    if (sectionId === 'donnees') {
        setTimeout(() => loadStats(), 100);
    }
}



    async function loadProperties() {
    try {
        const response = await fetch('/user/properties');
        if (response.ok) {
            const properties = await response.json();
            const propertiesList = document.getElementById('properties-list');
            propertiesList.innerHTML = '';

            const noPropertiesMessage = document.getElementById('no-properties-message');
            if (properties.length === 0) {
                noPropertiesMessage.style.display = 'block';
            } else {
                noPropertiesMessage.style.display = 'none';
                properties.forEach(property => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${property.rooms}</td>
                        <td>${property.surface}</td>
                        <td>${property.price.toLocaleString('fr-FR')} €</td>
                        <td>${property.city}</td>
                        <td>${property.country}</td>
                        <td><a href="${property.url}" target="_blank">${property.url}</a></td>
                        <td>
                            <div class="action-icons">
                                <i class="bi bi-clipboard" style="color: #333;" onclick="copyURL('${property.url}')"></i>
                                <i class="fa fa-shopping-cart" style="color: #333;" onclick="testURL('${property._id}')"></i>
                                <i class="fa fa-pencil-alt" style="color: #333;" onclick="editProperty('${property._id}')"></i>
                            </div>
                        </td>
                    `;
                    propertiesList.appendChild(row);
                });
            }
        } else {
            const propertiesList = document.getElementById('properties-list');
            propertiesList.innerHTML = '<tr><td colspan="7" class="text-center">Erreur lors du chargement des propriétés.</td></tr>';
        }
    } catch (error) {
        const propertiesList = document.getElementById('properties-list');
        propertiesList.innerHTML = '<tr><td colspan="7" class="text-center">Une erreur est survenue lors du chargement des propriétés.</td></tr>';
    }
}


    function copyURL(url) {
        const fullUrl = `https://uap.immo${url}`;
        navigator.clipboard.writeText(fullUrl)
            .then(() => {
                showCopyMessage();
            })
            .catch(err => {
                console.error('Impossible de copier l\'URL : ', err);
            });
    }

    function showCopyMessage() {
        const copyMessage = document.getElementById('copyMessage');
        copyMessage.style.display = 'block';
        setTimeout(() => {
            copyMessage.style.display = 'none';
        }, 2000);
    }

function testURL(propertyId) {
    console.log("🔍 ID de la propriété cliqué :", propertyId);

    // Récupération de la langue à partir de l'URL actuelle
    const currentLang = window.location.pathname.split('/')[1]; // 'en' ou 'fr'

    // Vérifier que currentLang est bien 'en' ou 'fr', sinon rediriger sans préfixe de langue
    if (currentLang === 'en' || currentLang === 'fr') {
        window.location.href = `/${currentLang}/payment?propertyId=${propertyId}`;
    } else {
        window.location.href = `/payment?propertyId=${propertyId}`;
    }
}

    function editProperty(propertyId) {
        window.location.href = `/property/edit/${propertyId}`;
    }
document.getElementById('add-property-form').addEventListener('submit', async function(event) {
  event.preventDefault();
  const formData = new FormData(this);

  try {
    const response = await fetch('/add-property', {
      method: 'POST',
      body: formData
    });

    const result = await response.text();
    console.log('Réponse du serveur :', result); // DEBUG

    document.getElementById('generatedLink').innerHTML = result;
    this.reset();

    setTimeout(() => {
      document.getElementById('generatedLink')?.scrollIntoView({ behavior: 'smooth' });
    }, 100);

  } catch (error) {
    console.error('Erreur lors de l\'ajout de la propriété :', error);
  }
});




    // Temps en millisecondes (5 minutes)
    const inactivityTime = 5 * 60 * 1000;
    let timeout;

    function resetTimer() {
        clearTimeout(timeout);
        timeout = setTimeout(logout, inactivityTime);
    }

  function logout() {
    const locale = document.documentElement.lang || 'fr'; // Récupère la langue de la page
    window.location.href = `/${locale}/login`;
}

    window.onload = resetTimer;
    document.onmousemove = resetTimer;
    document.onkeypress = resetTimer;
    document.onclick = resetTimer;
    document.onscroll = resetTimer;
</script>
<script>
  const descriptionInput = document.getElementById('description');
  const charCount = document.getElementById('charCount');

  descriptionInput.addEventListener('input', function() {
    charCount.textContent = `${descriptionInput.value.length}/820 caractères`;
  });
</script>
<script>
  document.getElementById('add-property-form').addEventListener('submit', function(event) {
      let missingFields = [];
      const requiredFields = ['price', 'surface', 'country', 'city', 'postalCode', 'propertyType', 'description'];
      
      requiredFields.forEach(field => {
          const input = document.getElementById(field);
          if (!input.value.trim()) {
              missingFields.push(field);
              input.style.border = "2px solid red";  // Mets en rouge les champs vides
          } else {
              input.style.border = "";  // Remets la bordure normale si rempli
          }
      });

      if (missingFields.length > 0) {
          event.preventDefault(); // Empêche l'envoi du formulaire
          alert("Veuillez remplir tous les champs obligatoires avant de soumettre le formulaire.");
      }
  });
</script>
<script>
document.addEventListener("DOMContentLoaded", function () {
    function handleFileUpload(input, progressId, statusId) {
        const file = input.files[0];

        if (file) {
            const progressBar = document.getElementById(progressId);
            const status = document.getElementById(statusId);

            // Réinitialisation
            progressBar.value = 0;
            progressBar.classList.remove("hidden");
            status.classList.remove("hidden");
            status.textContent = "Chargement en cours...";

            // Simulation d'upload progressif (remplace ça par une vraie requête si besoin)
            let progress = 0;
            const interval = setInterval(() => {
                progress += 10;
                progressBar.value = progress;

                if (progress >= 100) {
                    clearInterval(interval);
                    status.textContent = "✅ Image chargée avec succès !";
                    setTimeout(() => {
                        progressBar.classList.add("hidden");
                        status.classList.add("hidden");
                    }, 2000); // Cache après 2 secondes
                }
            }, 200);
        }
    }

    // Événements sur les inputs file
    document.getElementById("photo1").addEventListener("change", function () {
        handleFileUpload(this, "progress1", "status1");
    });

    document.getElementById("photo2").addEventListener("change", function () {
        handleFileUpload(this, "progress2", "status2");
    });
});
</script>
<script>
function formatDate(dateString) {
  const date = new Date(dateString);
  const day = String(date.getDate()).padStart(2, '0');
  const month = String(date.getMonth() + 1).padStart(2, '0');
  const year = date.getFullYear();
  return `${day}-${month}-${year}`;
}

async function loadOrders() {
  try {
    const response = await fetch('/user/orders');
    if (!response.ok) throw new Error('Erreur lors du chargement des commandes.');

    const orders = await response.json();
    const ordersList = document.getElementById('orders-list');
    ordersList.innerHTML = '';

    const noOrdersMessage = document.getElementById('no-orders-message');
    if (orders.length === 0) {
      noOrdersMessage.style.display = 'block';
    } else {
      noOrdersMessage.style.display = 'none';
      orders.forEach(order => {
        const orderDate = new Date(order.createdAt);
        const expiryDate = new Date(order.expiryDate);
        const today = new Date();
        const timeDiff = expiryDate - today;
        const daysRemaining = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));
        const adjustedDaysRemaining = daysRemaining >= 0 ? daysRemaining : 0;
        const progress = Math.min(((90 - adjustedDaysRemaining) / 90) * 100, 100);

        let progressBarColor = '#8BC34A';
        if (adjustedDaysRemaining <= 30) progressBarColor = '#FFC107';
        if (adjustedDaysRemaining <= 15) progressBarColor = '#FF5722';

        const url = order.propertyId?.url || `/landing-pages/${order.propertyId?._id}.html`;

        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${order.orderId || order._id}</td>
          <td>${orderDate.toLocaleDateString('fr-FR')}</td>
          <td>${order.status === 'paid' ? '<span class="badge bg-success">Payé</span>' : '<span class="badge bg-warning">En attente</span>'}</td>
          <td data-bs-toggle="tooltip" title="Nombre de jours de diffusion restants">
  ${adjustedDaysRemaining} jours restants
  <div class="progress" style="height: 10px; margin-top: 5px;">
    <div class="progress-bar" role="progressbar" style="width: ${progress}%; background-color: ${progressBarColor};"></div>
  </div>
</td>

          <td>${expiryDate.toLocaleDateString('fr-FR')}</td>
          <td>
            <button class="btn btn-sm btn-outline-dark me-1 copy-btn" data-url="${url}" title="Copier l'URL">
              <i class="bi bi-clipboard"></i>
            </button>
            <button class="btn btn-sm btn-dark me-1" onclick="window.open('https://uap.immo${url}', '_blank')" title="Voir la page">
              <i class="bi bi-eye"></i>
            </button>
          </td>
        `;
        ordersList.appendChild(row);
      });
    }

    document.querySelectorAll('#orders-list .copy-btn').forEach(button => {
      button.addEventListener('click', function () {
        const url = `https://uap.immo${this.dataset.url}`;
        navigator.clipboard.writeText(url).then(() => {
          const icon = this.querySelector('i');
          icon.classList.remove('bi-clipboard');
          icon.classList.add('bi-check-circle-fill', 'text-success');
          setTimeout(() => {
            icon.classList.remove('bi-check-circle-fill', 'text-success');
            icon.classList.add('bi-clipboard');
          }, 1500);
        });
      });
    });
  } catch (error) {
    document.getElementById('orders-list').innerHTML = '<tr><td colspan="6" class="text-center">Erreur lors du chargement des commandes.</td></tr>';
    console.error(error);
  }
}

function showSection(sectionId) {
  const sections = ['account', 'landing', 'donnees', 'created-pages', 'orders'];
  sections.forEach(id => {
    document.getElementById(id).style.display = id === sectionId ? 'block' : 'none';
  });

  if (sectionId === 'orders') loadOrders();
  if (sectionId === 'created-pages') loadLandingPages();
  if (sectionId === 'donnees') loadStats();
}
</script>


<script>
async function loadLandingPages() {
  try {
    const response = await fetch('/user/landing-pages');
    if (!response.ok) throw new Error("Erreur lors du chargement des données");

    const landingPages = await response.json();
    const landingPagesList = document.getElementById('properties-list');
    landingPagesList.innerHTML = '';

    const noPropertiesMessage = document.getElementById('no-properties-message');
    if (landingPages.length === 0) {
      noPropertiesMessage.style.display = 'block';
    } else {
      noPropertiesMessage.style.display = 'none';
      landingPages.forEach(page => {
        const disabled = page.hasActiveOrder;

        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${page._id}</td>
          <td>${page.propertyType ?? ''}</td>
          <td>${page.country ?? ''}</td>
          <td>${page.city ?? ''}</td>
          <td>${page.price?.toLocaleString('fr-FR') ?? ''} €</td>
          <td>
            <button class="btn btn-sm btn-outline-dark hover-grey show-details-btn" 
                    data-details='${JSON.stringify(page).replace(/'/g, "&apos;")}'>
              <i class="bi bi-info-circle"></i> Détails
            </button>
          </td>
          <td>
            <button class="btn btn-sm btn-outline-dark me-1 copy-btn" data-url="${page.url}" title="Copier l'URL">
              <i class="bi bi-clipboard"></i>
            </button>
            <button class="btn btn-sm ${disabled ? 'btn-warning disabled' : 'btn-dark'} me-1" 
                    ${disabled ? 'disabled' : ''} 
                    title="${disabled ? 'Commande active en cours' : 'Diffuser'}" 
                    ${disabled ? '' : `onclick="redirectToPayment('${page._id}')"`}>
              <i class="bi bi-megaphone"></i>
            </button>
            <button class="btn btn-sm ${disabled ? 'btn-secondary disabled' : 'btn-dark'} me-1" 
                    ${disabled ? 'disabled' : ''} 
                    title="${disabled ? 'Modification temporairement désactivée' : 'Modifier'}" 
                    ${disabled ? '' : `onclick="editProperty('${page._id}')"`}>
              <i class="bi bi-pencil-square"></i>
            </button>
            <a class="btn btn-sm btn-outline-primary" href="/pdf/${page._id}" target="_blank" title="PDF">
              <i class="bi bi-file-earmark-pdf"></i>
            </a>
          </td>
        `;
        landingPagesList.appendChild(row);
      });
    }

    document.querySelectorAll('.copy-btn').forEach(button => {
      button.addEventListener('click', function () {
        const url = `https://uap.immo${this.dataset.url}`;
        navigator.clipboard.writeText(url).then(() => {
          const icon = this.querySelector('i');
          icon.classList.remove('bi-clipboard');
          icon.classList.add('bi-check-circle-fill', 'text-success');
          setTimeout(() => {
            icon.classList.remove('bi-check-circle-fill', 'text-success');
            icon.classList.add('bi-clipboard');
          }, 1500);
        });
      });
    });
  } catch (error) {
    console.error("❌ Erreur lors du chargement des landing pages :", error);
    document.getElementById('properties-list').innerHTML = '<tr><td colspan="7" class="text-center">Erreur lors du chargement des landing pages.</td></tr>';
  }
}

function redirectToPayment(propertyId) {
  const locale = document.documentElement.lang || 'fr';
  window.location.href = `/${locale}/payment?propertyId=${encodeURIComponent(propertyId)}`;
}

function showToast() {
  const toast = document.getElementById('toast-confirm');
  toast.style.display = 'block';
  setTimeout(() => {
    toast.style.display = 'none';
  }, 3000);
}
</script>
<script>
document.addEventListener('click', function (event) {
  if (event.target.closest('.show-details-btn')) {
    const btn = event.target.closest('.show-details-btn');
    try {
      const data = JSON.parse(btn.dataset.details.replace(/&apos;/g, "'"));
      showPageDetails(data);
    } catch (e) {
      console.error("Erreur lors du parsing JSON :", e);
    }
  }
});
</script>

<script>
async function renewOrder(orderId) { 
  try { 
    const response = await fetch('/user/orders/renew', { 
      method: 'POST', 
      headers: { 'Content-Type': 'application/json' }, 
      body: JSON.stringify({ orderId }) 
    });

    const result = await response.json();
    if (response.ok) { 
      alert('Commande renouvelée avec succès !'); 
      loadOrders(); // Recharger la liste des commandes 
    } else { 
      alert(result.error || 'Erreur lors du renouvellement de la commande.'); 
    }
  } catch (error) { 
    console.error('Erreur lors du renouvellement :', error); 
    alert('Une erreur est survenue.'); 
  }
}
</script>
<script>
async function loadStats() {
  try {
    const statsList = document.getElementById('stats-table-body');
    if (!statsList) {
      console.warn('⚠️ statsTableBody non trouvé dans le DOM');
      return;
    }

    // Obtenir les dates depuis le formulaire
    const startDate = document.getElementById('startDate')?.value || '30daysAgo';
    const endDate = document.getElementById('endDate')?.value || 'today';

    statsList.innerHTML = '';

    const response = await fetch('/user/landing-pages');
    const pages = await response.json();

    for (const page of pages) {
      const pageId = page._id;
      const pageUrl = page.url;

      const res = await fetch(`/api/stats/${pageId}?startDate=${startDate}&endDate=${endDate}`);
      const contentType = res.headers.get("content-type");

      if (!contentType || !contentType.includes("application/json")) {
        const text = await res.text();
        console.error("❌ Réponse non JSON :", text);
        continue;
      }

          const data = await res.json();
      if (data.error) {
        console.error(`❌ Erreur pour la page ${pageId} :`, data.error);
        continue;
      }

      const views = data.views || 0;
      const users = data.users || 0;

      // ➕ Ajouter ici :
      const scrolls = data.scrolls || 0;
      const geo = data.geo || {};
      const device = data.deviceCategory || 'N/A';
      const os = data.operatingSystem || 'N/A';
      const browser = data.browser || 'N/A';
      const lang = data.language || 'N/A';
      const source = data.sessionDefaultChannelGroup || data.channel || 'N/A';

      // Ne pas afficher les lignes sans données
      if (views === 0 && users === 0) continue;

      const row = document.createElement('tr');
     row.innerHTML = `
  <td><a href="${pageUrl}" target="_blank">${pageUrl}</a></td>
  <td>${views}</td>
  <td>${users}</td>
  <td>${scrolls}</td>
  <td>${source}</td>
  <td>${geo.country || '—'}${geo.region ? ', ' + geo.region : ''}${geo.city ? ', ' + geo.city : ''}</td>
  <td>${device}</td>
  <td>${os}</td>
  <td>${browser}</td>
  <td>${lang}</td>
`;

      statsList.appendChild(row);
    }

    // Ajouter les événements après l'injection
    document.querySelectorAll('.copy-btn').forEach(button => {
      button.addEventListener('click', function () {
        const url = `https://uap.immo${this.dataset.url}`;
        navigator.clipboard.writeText(url).then(() => {
          const icon = this.querySelector('i');
          icon.classList.remove('bi-clipboard');
          icon.classList.add('bi-check-circle-fill', 'text-success');

          setTimeout(() => {
            icon.classList.remove('bi-check-circle-fill', 'text-success');
            icon.classList.add('bi-clipboard');
          }, 1500);
        });
      });
    });

  } catch (error) {
    console.error('❌ Erreur lors du chargement des statistiques:', error);
    const statsList = document.getElementById('statsTableBody');
    if (statsList) {
      statsList.innerHTML = '<tr><td colspan="5">❌ Erreur lors du chargement des statistiques.</td></tr>';
    }
  }
}
</script>

<script>
  // Lancer une première fois au chargement
  document.addEventListener('DOMContentLoaded', () => {
    loadStats();

    const statsForm = document.getElementById('statsFilter');
    if (statsForm) {
      statsForm.addEventListener('submit', (e) => {
        e.preventDefault(); // Ne pas recharger la page
        loadStats();        // Relancer la fonction avec les nouvelles dates
      });
    } else {
      console.warn('⚠️ Formulaire #statsFilter introuvable.');
    }
  });
</script>



<script>
  document.getElementById('disable2FABtn')?.addEventListener('click', async () => {
    if (!confirm('Souhaitez-vous vraiment désactiver la 2FA ?')) return;

    const res = await fetch('/disable-2fa', { method: 'POST' });
    const result = await res.json();

    if (result.success) {
      document.getElementById('2fa-message').innerHTML = '<div class="alert alert-success">✅ 2FA désactivée avec succès</div>';
      setTimeout(() => location.reload(), 2000);
    } else {
      document.getElementById('2fa-message').innerHTML = '<div class="alert alert-danger">❌ Erreur : ' + result.error + '</div>';
    }
  });
</script>

<script>
document.getElementById('statsFilter').addEventListener('submit', async (e) => {
  e.preventDefault();
  const startDate = e.target.startDate.value;
  const endDate = e.target.endDate.value;

  const res = await fetch(`/api/stats/<%= user._id %>?startDate=${startDate}&endDate=${endDate}`);
  const stats = await res.json();

  const tbody = document.querySelector('#statsTable tbody');
  tbody.innerHTML = '';

  stats.forEach(stat => {
    const row = `
      <tr>
    <td>${stat.pagePath}</td>
    <td>${stat.views}</td>
    <td>${stat.users}</td>
    <td>${stat.source}</td>
  </tr>`;
    tbody.insertAdjacentHTML('beforeend', row);
  });
});
</script>
<script>
document.addEventListener("DOMContentLoaded", function () {
  const descriptionInput = document.getElementById('description');
  const charCount = document.getElementById('charCount');

  descriptionInput.addEventListener('input', function () {
    const count = descriptionInput.value.length;
    charCount.textContent = `${count}/820 caractères`;

    if (count > 750) {
      charCount.style.color = '#dc3545'; // rouge
    } else {
      charCount.style.color = '#6c757d'; // gris
    }
  });
});
</script>
<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="detailsModalLabel">Détails de la propriété</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
      </div>
      <div class="modal-body" id="modalDetailsBody">
        <!-- Contenu injecté par JS -->
      </div>
    </div>
  </div>
</div>

<!-- Modal QR Code -->
<div class="modal fade" id="qrModal" tabindex="-1" aria-labelledby="qrModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-sm modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header flex-column align-items-start">
  <h5 class="modal-title" id="qrModalLabel">QR Code</h5>
  <p class="mb-0 small text-muted">Scannez pour visualiser et partager facilement votre annonce</p>
  <button type="button" class="btn-close position-absolute top-0 end-0 mt-2 me-2" data-bs-dismiss="modal" aria-label="Fermer"></button>
</div>

      <div class="modal-body text-center" id="qrCodeContainer">
        <!-- QR code généré s'affichera ici -->
        <div class="spinner-border text-primary" role="status">
          <span class="visually-hidden">Chargement...</span>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
function showQRCode(propertyId) {
  const qrContainer = document.getElementById('qrCodeContainer');
  qrContainer.innerHTML = `
    <div class="spinner-border text-primary" role="status">
      <span class="visually-hidden">Chargement...</span>
    </div>
  `;

  // Affiche la modale
  const qrModal = new bootstrap.Modal(document.getElementById('qrModal'));
  qrModal.show();

  // Charge le QR Code
  fetch(`/qr/${propertyId}`)
    .then(response => response.text())
    .then(html => {
      qrContainer.innerHTML = html;
    })
    .catch(err => {
      qrContainer.innerHTML = `<p class="text-danger">Erreur de génération du QR code</p>`;
      console.error(err);
    });
}
</script>
<script>
function showPageDetails(page) {
  const data = typeof page === 'string' ? JSON.parse(decodeURIComponent(page)) : page;
  const html = `
  <p><strong>ID :</strong> ${data._id}</p>
  <p><strong>Type :</strong> ${data.propertyType ?? 'N/A'}</p>
  <p><strong>Pays :</strong> ${data.country ?? 'N/A'}</p>
  <p><strong>Ville :</strong> ${data.city ?? 'N/A'}</p>
  <p><strong>Surface :</strong> ${data.surface ?? 'N/A'} m²</p>
  <p><strong>Prix :</strong> ${data.price?.toLocaleString('fr-FR') ?? 'N/A'} €</p>
  <p><strong>Année :</strong> ${data.yearBuilt ?? 'N/A'}</p>
  <p><strong>DPE :</strong> ${data.dpe ?? 'N/A'}</p>
  <p><strong>Description :</strong><br>${data.description ?? ''}</p>
  <div class="text-end mt-4">
   <button class="btn btn-sm btn-dark" onclick="editProperty('${data._id}')">
      <i class="bi bi-pencil-square me-1"></i> Modifier
    </button>
  </div>
`;
  document.getElementById('modalDetailsBody').innerHTML = html;
  const modal = new bootstrap.Modal(document.getElementById('detailsModal'));
  modal.show();
}
</script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const tooltipElements = document.querySelectorAll('[data-bs-toggle="tooltip"], [title]:not(.sidebar a)');
    tooltipElements.forEach(el => {
      new bootstrap.Tooltip(el);
    });
  });
</script>



</body>
</html>
